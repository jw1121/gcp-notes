createdAt: "2019-08-22T16:06:23.804Z"
updatedAt: "2019-11-04T23:29:29.064Z"
type: "MARKDOWN_NOTE"
folder: "830f33e7d047ca73102c"
title: "GCP Networking"
tags: []
content: '''
  # GCP Networking
  
  ## VPC
  > Provides **global**, scalable flexible networking functionlity to GCE, GKE, GAE flex.
  
  - VPC global but subnets are regional resource.
  - Secondary Ip ranges can be defined for alias IP addresses.
  - Route define a path for traffic to leave the VPC network.
   
  ### Subnets
   - IP range partitions
   - each subnets are associated with a region.
   - Auto mode can be change to manual mode but no the other way around.
   - new projects start with `default` network with pre-pipulated firewall rule.
   - subnet is regional resource and can span muliple zones.
   
  ### Firewall
  - Allow or deny traffic to and from your virtual machine (VM) instances
  - Rule only support IPV4 unicast traffic.
  - A firewall rule applicable to the TCP protocol can only apply to the first fragment because it contains the TCP header
  - google run local metaserver at `168.254.169.254` is accessible regardless of any firewall rule and provide following service: DHCP, DNS, NTP, instance metadata
  - There are two implied rules:
    - `allow`  ***egress*** to 0.0.0.0/0 with lowest priority which let you send traffic to any destination. 
    - `deny` ***ingress*** from 0.0.0.0/0 with lowest priority which blocks all traffic from all source.
  - always allows communiction between a VM instance.
  - you can't share firewall rule between networks or VPN
  - Firewall rule consist of following components:
    - **Priority** between `0` to `65535` with 0 as highest and default as `1000`
    - **Traffic direction**, `ingress` or `egress`
    - **Action** which is either `allow` or `deny`
    - **Target** can be instance in network, by service account, or network tag.
    - **Source or Destination** can be IPv4 address, instance by service account or network tag.
    - **Protocol** such as TCP, UDP, or ICMP
    - **Enforcement** status: `enabled` or `disabled`
   - `deny` rule will override `allow` if  they have same priority for same target.
   
   ** While routes govern traffic leaving an instance, forwarding rules direct traffic to a GCP resource in a VPC network based on IP address, protocol, and port.
  
  ### Route
  > Defines path network traffic takes from a VM instance to the destinations.
  
  - Each VM instance has a controller that kept informed of all the applicable routes from routing table.
  - Route types:
    - **Default route** system generted route that defines path out of VPC network (eg. internet) with destination 0.0.0.0/0 and applied when there is not more specific destination route defined. This can be replaced or deleted.
    - **Subnet route** define path to each subnet in VPN network.
    - **Static route** are manually created routes.
    - **Dyanmic route** managed by 1+ Cloud Routers. There destination IP always represent ip range outside of your VPC network and next hops are always BGP peering address.
  
  
  ### Shared VPC
  - Allows an organization to connect resources from multiple projects to a common VPC network. 
  - It designate a project as _host project_ and attach 1+ service projects
  - When host project is enables, all of its exsiting and new VPC network becomes _Shared_ VPC networks.
  - Use IAM role to delegate administration.
  - Existing resources in service project doesnt automatically use shared network resource.
  ### VPC Peering
  - Allow private RFC1918 connectivity across two VPC networks regardless or not they belong to same Organization or Project.
  - VPC peering is advantagous over external IPs or VPN since the traffic stay within Google network. It provides low latency, lower security risk, and lower cost than egress charge from external IP.
  
  ---
  ## Cloud Load Balancer
  <iframe width="560" height="315" src="https://www.youtube.com/embed/HUHBq_VGgFg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
  
  ## HTTP(s) Load Balancer
  ### Type
    - cross-region load balancer uses global IP to route user based proximity. 
    - content-based load balancer distributes traffic based on incomming URL.
  
  ### Fundamentals
   - forwardig rule to redirect traffic to target HTTP proxy.
   - target proxy determine the appropriate *backend server* using *URL map*.
   - backend serivce directs request to a backend service based on capacity, zone, health
  
  #### Main point
    - HTTPS proxy can have up to *15 certs* installed.
    - *SSL policy* to control the features of SSL (version, ciphers, etc)
    - supports TLS 1.0, 1.1, 1.2
    - Backend serivces direct traffic to 1+ attached instance group (backends)
    - connection draining available for instance group
    - Backend bucket direct traffic to GCS
    - Load is direct to the region closest to the user, to zone according to capacity and round-robin evenly within a zone
    - **Session affinity** redirect request from same client to the same VM instance
    - The **response timeout** is time LB will wait for backend to complete reponse. Default at 30 sec
    - TCP session timeout of fixed 10 mins is not configuable.
  
  ###### The load balancer blocks the following for HTTP/1.1 compliance:
  
  - It cannot parse the first line of the request.
  - A header is missing the : delimiter.
  - Headers or the first line contain invalid characters.
  - The content length is not a valid number, or there are multiple content length headers.
  - There are multiple transfer encoding keys, or there are unrecognized transfer encoding values.
  - There's a non-chunked body and no content length specified.
  - Body chunks are unparseable. This is the only case where some data will make it to the backend. The load balancer will close the connections to client and backend when it receives an unparseable chunk.
  
  ###### The load balancer blocks the request if any of the following are true:
  
  - The combination of request URL and headers is longer than about 15KB.
  - The request method does not allow a body, but the request has one.
  - The request contains an upgrade header.
  - The HTTP version is unknown.
  
  ###### The load balancer blocks the backend's response if any of the following are true:
  
  - The response headers' total size is longer than about 128KB.
  - The HTTP version is unknown.
  
  ## TCP Proxy Load Balance
  * Automatically route traffic to instance that are closest to the user.
  * Load balance is regional unless subscribe to Premium Tier.
  * TCP is for Non-HTTP traffic.
  
  #### Use Network LB
  * when you need UDP or non-HTTP TCP traffic
  * when its acceptable to decrypt SSL traffic by backend server
  * when self managed SSL is used. Google managed SSl cert is available only to HTTP(S) traffic
  
  ## Load balance
  
  - TCP, HTTP(S), SSL are global and Network, Internal HTTP, Internal TCP are regional
  - 
  #### HTTP(S) proxy Load balance
  #### SSL Proxy Load Balance
  #### TCP Load Balace
  #### Network Load Balance
  #### Internal Load Balance
  
  ---
  ## Cloud Interconnect
   <iframe width="560" height="315" src="https://www.youtube.com/embed/ZMHXxHaCAeE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
  
  - use private ip
  - has maintenance cost 
  - To connect between on-prem and GCP cloud without internet connection and require enterprise grade low-latency and high availability connection.
  - Use Cloud VPN when low latency or hight availability is not required to lower the overhead and costs.
  
  ### Dedicated Interconnect
   - 10Gb or 100Gb physical connection with max 80gb or 200Gb
   - traffic not encrypted and Google Cloud VPN not supported
  
  ### Partner Interconnect
   - provides more connection point
   - no maintain of routing equipment or installation
   - SLA based on your service provider
   -  traffic not encrypted.
  
  ## Peering
  - Does not require GCP
  - No setup or maintenance costs
  - vpn is required since private ips is needed
  - no SLA
  - **BGP** is responsible for looking at all the availble path that data cloud travel and pick the best route.
  
  ---
  ## Cloud VPN
  - IPsec
  
  ---
  ## Cloud Router
  - Use BGP to exchange route between VPC and on-preme network.
  
  
  
  
  
  |       Category      |       Network Load Balancing (NLB)       |             HTTP(S) Load Balancing (HLB)             |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |     1. Region /     | NLB supports only within a region.       | HLB supports both within cross-region                |
  |     Cross-Region    | Does not support cross-region            | load balancing.                                      |
  |                     | load balancing                           |                                                      |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |  2. Load balancing  | NLB is based on IP address, port         | HLB is based only on HTTP and HTTPS                  |
  |       based on      | and protocol type. Any TCP/UDP           | protocols.                                           |
  |                     | traffic, even SMTP can be                |                                                      |
  |                     | load balanced.                           |                                                      |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |      3. Packet      | Packet inspection is possible and        | HLB cannot inspect packets.                          |
  |      inspection     | load balance based on packets            |                                                      |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |     4. Instance     | No need of creating instance group.      | Managed / UnManaged Instance group                   |
  |         Group       | Target pools need to be created.         | is necessary for creating HTTP / HTTPS               |
  |                     | Instance can be just tagged to the pool. | load balancer.                                       |
  |                     | Ideal for unmanaged instance group       |                                                      |
  |                     | where instances are non homogeneous.     |                                                      |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |     5. Workflow     | Forwarding rules is the starting point.  | This is quite complex in HTTP(s) load balancer.      |
  |                     | It directs the request to the            | Global forwarding rulesroutes direct the request     |
  |                     | target pools from which compute          | to target HTTP proxy, which in turn checks the       |
  |                     | engines will pick the request.           | URL map to determine appropriate backend             |
  |                     |                                          | services.  These services in turn direct the request |
  |                     | Forwarding rules -> target pool          | to the instance group.                               |
  |                     |  -> instances                            |                                                      |
  |                     |                                          |                                                      |
  |                     |                                          | Global forwarding rules -> Target HTTP proxy ->      |
  |                     |                                          | URL map -> Backend Sevices -> instance group         |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |     6. Types of     | Basic network load balancer which        | 1. Cross-region load balancer uses only one          |
  |    load balancer    | directs the request based on IP address, | global IP address and routes the request             |
  |                     | port and the protocol within the region. | to the nearest region.                               |
  |                     |                                          |                                                      |
  |                     |                                          | 2. Content-based load balancer is based              |
  |                     |                                          | on the URL path. Different path rules need           |
  |                     |                                          | different backend services. for eg: /video           |
  |                     |                                          | and /static require two separate backend services.   |
  |---------------------|------------------------------------------|------------------------------------------------------|
  | 7. Session affinity | Session affinity can be set, but only    | 1. Client IP Affinity: This directs the same         |
  |                     | during the creation of target pool.      | client ip to same backend instance by                |
  |                     | Once it is set, the value                | computing hash of the IP.                            |
  |                     | cannot be changed.                       | 2. Generated Cookie Affinity: Load balancer stores   |
  |                     |                                          | cookie in clients and directs the same client to     |
  |                     |                                          | same instance with the help of retrieved cookie.     |
  |---------------------|------------------------------------------|------------------------------------------------------|
  |   8. Health check   | Health check is optional, but network    | Health can be verified by either using HTTP          |
  |                     | load balancing relies on HTTP Health     | heath check or HTTPS health check.                   |
  |                     | checks for determining instance health.  |                                                      |
  |---------------------|------------------------------------------|------------------------------------------------------|
  
'''
linesHighlighted: [
  113
]
isStarred: false
isTrashed: false
